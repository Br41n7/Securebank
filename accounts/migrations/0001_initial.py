# Generated by Django 5.2.7 on 2025-10-20 20:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                        verbose_name="phone number",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="date of birth"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="email verified"),
                ),
                (
                    "is_phone_verified",
                    models.BooleanField(default=False, verbose_name="phone verified"),
                ),
                (
                    "two_factor_enabled",
                    models.BooleanField(default=False, verbose_name="2FA enabled"),
                ),
                (
                    "last_login_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="last login IP"
                    ),
                ),
                (
                    "failed_login_attempts",
                    models.PositiveIntegerField(
                        default=0, verbose_name="failed login attempts"
                    ),
                ),
                (
                    "account_locked_until",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="account locked until"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "accounts_user",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="BankAccount",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "account_number",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="account number"
                    ),
                ),
                (
                    "account_name",
                    models.CharField(max_length=100, verbose_name="account name"),
                ),
                (
                    "account_type",
                    models.CharField(
                        choices=[
                            ("SAVINGS", "Savings Account"),
                            ("CURRENT", "Current Account"),
                            ("FIXED_DEPOSIT", "Fixed Deposit"),
                            ("CRYPTO", "Crypto Wallet"),
                            ("BUSINESS", "Business Account"),
                        ],
                        max_length=20,
                        verbose_name="account type",
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=15,
                        verbose_name="balance",
                    ),
                ),
                (
                    "available_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=15,
                        verbose_name="available balance",
                    ),
                ),
                (
                    "frozen_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=15,
                        verbose_name="frozen balance",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="NGN", max_length=3, verbose_name="currency"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("FROZEN", "Frozen"),
                            ("CLOSED", "Closed"),
                            ("SUSPENDED", "Suspended"),
                        ],
                        default="ACTIVE",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="default account"),
                ),
                (
                    "daily_limit",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("500000.00"),
                        max_digits=15,
                        verbose_name="daily limit",
                    ),
                ),
                (
                    "single_transaction_limit",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("100000.00"),
                        max_digits=15,
                        verbose_name="single transaction limit",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="accounts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Bank Account",
                "verbose_name_plural": "Bank Accounts",
                "db_table": "accounts_bank_account",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LoginAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254, verbose_name="email")),
                ("ip_address", models.GenericIPAddressField(verbose_name="IP address")),
                ("user_agent", models.TextField(blank=True, verbose_name="user agent")),
                ("success", models.BooleanField(default=False, verbose_name="success")),
                (
                    "failure_reason",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="failure reason"
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="timestamp"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="login_attempts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Login Attempt",
                "verbose_name_plural": "Login Attempts",
                "db_table": "accounts_login_attempt",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="SecuritySettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "login_notifications",
                    models.BooleanField(
                        default=True, verbose_name="login notifications"
                    ),
                ),
                (
                    "transaction_notifications",
                    models.BooleanField(
                        default=True, verbose_name="transaction notifications"
                    ),
                ),
                (
                    "email_alerts",
                    models.BooleanField(default=True, verbose_name="email alerts"),
                ),
                (
                    "sms_alerts",
                    models.BooleanField(default=False, verbose_name="SMS alerts"),
                ),
                (
                    "require_otp_for_transactions",
                    models.BooleanField(
                        default=True, verbose_name="require OTP for transactions"
                    ),
                ),
                (
                    "transaction_threshold",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("10000.00"),
                        max_digits=15,
                        verbose_name="transaction threshold",
                    ),
                ),
                (
                    "auto_logout_time",
                    models.PositiveIntegerField(
                        default=60, verbose_name="auto logout time (minutes)"
                    ),
                ),
                (
                    "concurrent_sessions",
                    models.BooleanField(
                        default=False, verbose_name="allow concurrent sessions"
                    ),
                ),
                (
                    "trusted_devices_only",
                    models.BooleanField(
                        default=False, verbose_name="trusted devices only"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="security_settings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Security Settings",
                "verbose_name_plural": "Security Settings",
                "db_table": "accounts_security_settings",
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        max_length=1,
                        verbose_name="gender",
                    ),
                ),
                ("address", models.TextField(blank=True, verbose_name="address")),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="city"),
                ),
                (
                    "state",
                    models.CharField(blank=True, max_length=100, verbose_name="state"),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="country"
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="postal code"
                    ),
                ),
                (
                    "id_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("NIN", "National ID"),
                            ("PASSPORT", "Passport"),
                            ("DRIVERS_LICENSE", "Driver's License"),
                            ("VOTERS_CARD", "Voter's Card"),
                        ],
                        max_length=20,
                        verbose_name="ID type",
                    ),
                ),
                (
                    "id_number",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="ID number"
                    ),
                ),
                (
                    "id_document",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="kyc_documents/",
                        verbose_name="ID document",
                    ),
                ),
                (
                    "proof_of_address",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="address_documents/",
                        verbose_name="proof of address",
                    ),
                ),
                (
                    "kyc_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("VERIFIED", "Verified"),
                            ("REJECTED", "Rejected"),
                            ("REVIEW", "Under Review"),
                        ],
                        default="PENDING",
                        max_length=20,
                        verbose_name="KYC status",
                    ),
                ),
                (
                    "kyc_submitted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="KYC submitted at"
                    ),
                ),
                (
                    "kyc_verified_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="KYC verified at"
                    ),
                ),
                ("kyc_notes", models.TextField(blank=True, verbose_name="KYC notes")),
                (
                    "currency",
                    models.CharField(
                        default="NGN", max_length=3, verbose_name="preferred currency"
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        default="en", max_length=10, verbose_name="preferred language"
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="UTC", max_length=50, verbose_name="timezone"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
                "db_table": "accounts_user_profile",
            },
        ),
    ]
